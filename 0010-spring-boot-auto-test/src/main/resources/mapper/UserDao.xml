<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.UserDao">


<!--
    将一些常用的字段集中起来使用
-->
    <sql id="CommonsID" >
        userPwd,userName,gender,email,roomId,userType
    </sql>

<!--
        "${(pageIndex - 1) * pageSize} , #{pageSize}") 字符串拼接
-->

<!--
字段=值,
字段=值,
字段=值,
字段=值,
字段=值,
-->
    <select id="selectUserResultMap" resultType="map">
        SELECT * FROM tb_user
    </select>


    <select id="selectUserpage"  parameterType="com.example.demo.domain.Page" resultType="com.example.demo.domain.User" >
              select * from tb_user order by id desc limit ${(page-1)*limit},#{limit}
    </select>


    <select id="selectProdpage" resultType="com.example.demo.domain.Prod">
        select  * from  t_prod order by id desc limit ${(page-1)*limit},#{limit}
   </select>

    <select id="selectUser"  resultType="com.example.demo.domain.User" >
        select * from tb_user order by id desc
    </select>

    <update id="Update" parameterType="com.example.demo.domain.User">
        update tb_user set user_pwd=#{userPwd},user_name=#{userName},gender=#{gender},email=#{email},room_id=#{roomId},user_type=#{userType} where id=#{id}
    </update>

    <delete id="delete">
        delete from tb_user where id=#{id}
    </delete>





<!--    新增时查询最大id并加1 作为id-->
    <select id="selectMaxId" resultType="integer">
        select  max(id)+1  from tb_user;
    </select>

    <insert id="insert" parameterType="com.example.demo.domain.User">
        insert  into tb_user(id,user_pwd,user_name,gender,email,room_id,user_type)values(#{javaBeanUser.id},#{javaBeanUser.userPwd},#{javaBeanUser.userName},#{javaBeanUser.gender},#{javaBeanUser.email},#{javaBeanUser.roomId},#{javaBeanUser.userType})
    </insert>


    <select id="selectById" resultType="com.example.demo.domain.User">
        SELECT * FROM tb_user WHERE id=#{id23}
    </select>

<!--  ProdInfoVo中封装了我们的  条件查询-->
<!--
        select * from  t_prod
        where
        prod_name like '%%x6%'
        AND  prod_type='0'
        AND  price >= 16
        AND  price <=999
-->
    <select id="selectProd" parameterType="com.example.demo.vo.ProdInfoVo" resultType="com.example.demo.domain.Prod">
            select * from  t_prod
            <where>
                 <if test="prod_name!=null and prod_name!=''">
                     AND prod_name like "%"#{prod_name}"%"
                 </if>

                <if test="prod_type!=null and prod_type!=''">
                  AND  prod_type=#{prod_type}
                </if>

                <if test="low_price!=null and heigh_price==''">
                    AND  price &gt;=#{low_price}
                </if>

                <if test="heigh_price!=null and low_price==''">
                    AND  price &lt;=#{heigh_price}
                </if>

                <if test="heigh_price!=null and low_price!=null">
                    AND  price between #{low_price} and #{heigh_price}
                </if>
        </where>
    </select>


    <select id="test">
        select * from tb_user where id in
        <foreach collection="id" separator="," item="var" open="(" close=")">
        #{var}
        </foreach>
    </select>
</mapper>
